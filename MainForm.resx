<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Bevel.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label1.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA3AAAAO0ZGRntaWho7YmGhu2EgoLtcm5u7V5YWO1PS0ztSkdI7U5K
        Su1iXF3thYGB7aenq+2swN3tvs/n7brI5O2qvd/tnrTY7YCcye1ae7btUlt27VJLSe1LR0jtTUlK7VpT
        VO1uaWntdXNz7V5cXO0YFxftAAAA7QAAANwAAADyNzc3/729vf/ExMT/sa6u/6Oiov+Njo7/dHFz/11a
        XP9TUlP/UlFS/2FeYP+Ih4f/sbK1/6u/3v++zun/u8rm/6m83/+Yrtb/eJbG/1Z2sP9YXnD/VVNR/1NR
        U/9cWVv/c3Fy/4uLi/+em5v/trOz/7S0tP82Njb/AAAA8hsbG+3Gxsb/1NTU/8/R0f+ssrL/bXV0/1Zf
        Xf9LUlD/PUE//zQ4Nv8zODX/PEA+/1BXVP9iaWf/mKzK/77P6/+7yub/pbne/42n1P9sjcL/T2ul/zlB
        Sf80ODP/NTk3/z1CP/9LU1D/Y21s/6GoqP/HyMn/0M/P/8TExP8cHBzteXl57dvb2//a29z/mZ2c/xoZ
        Fv8IAwD/CwYA/w0IAP8PCgD/EAsC/xMNA/8SDAH/EQsA/xEKAP+Ak7L/vM/u/7PE5P+htt3/hqPS/1+D
        wP9FXpb/GBQO/xQNAP8UDgP/FA8C/xELAP8JBQD/GhoW/5ecmv/a3Nz/3Nzc/3h4eO2xsbHt1dXV/7/D
        w/8aGBL/DwkA/yAZC/8lHg3/JR0N/yYfDf8pIQ7/LSMP/y8lEP8vJA7/NiwX/4uewP+yxur/pLjf/5av
        2v+Io9P/Vni+/z9Uhv8xJxH/MCYQ/zAmEf8vJRD/MCUR/yYeDf8QCwD/HBoT/8DExP/X19f/sbGx7cDA
        wO3V1tf/goaE/wUBAP8hGgv/LCMP/zgtE/88MBX/Oi4U/z0wFf89MBX/QTQX/0EyE/9SRSr/lanQ/5+3
        5f+Oqtz/e53U/3eY0P9Pc7z/PU13/0Y2E/9CNRf/QzYX/0EzFv9HOBj/PjEW/yggDv8HAwD/goaE/9bX
        2P/CwsLtvLu77c/R0v9scW7/CAMA/ycgDv8yKBL/PzIV/0Q1F/9CNBf/RDUX/0Q2F/9IORn/SzkV/2RX
        O/+Yrtn/n7fk/5Wv3f9+n9X/YIbJ/0Jktf9EUHT/TDsV/0k6Gv9KOxr/TDwa/08/G/9HOBn/LyUQ/wwG
        AP9tcm//0NHS/727u+21s7PtxsfI/2twbf8LBgD/KCAO/zQpEv87LxT/PTAV/z4xFf9BMxb/RjcY/0s8
        Gv9TPxP/iHhB/6S54P+oveT/mrLe/4yp2P9pisf/QmO2/2Jkcv+fcgj/SDkb/009G/9OPhv/UUAc/0s8
        Gv80KRL/DQgA/2xwbv/Gxsf/trOz7ayqqu28vLz/Zmxq/w0HAP8qIQ7/NSoT/zgsE/86LhT/PC8V/z4x
        Ff9BNBn/WkcZ/6R9Bv+Me0P/prfl/6S34v+Dodr/dpfU/2aFxf9Pa7j/TVRt/5NoB/+Wbg7/Sjwc/1A/
        HP9SQRz/SjsZ/zcrE/8QCQD/Zmxp/7u6u/+rqKjtop+f7bGxsf9iaGb/DggA/ykgDv81KhL/OC0T/z0w
        Ff8/Mhb/PDAW/089GP+oeAz/mnQJ/7icN/+jtOD/sL7j/6i13f98ltH/YoDF/0diuP+dgkr/o3EG/6R7
        Df9iTBf/Tj4d/1NCHP9NPhv/OS0U/xAJAP9haGX/rq+v/6Cdne2Zlpbtpaan/15mY/8NBwD/KiEP/zwv
        FP84LRP/PDAV/0AzFv9BNBb/jGUQ/7iDDP+7jwb/kHo7/6Gx2v/M0Oj/trre/5CZzP9ofMD/Pleq/515
        I/+yfwf/k24S/2xVF/9SQR3/UUAc/08/G/84LBP/EQoA/19nZP+kpKX/mJSU7ZCLi+2dnJ3/XGRh/w0H
        AP8qIQ7/Oi4U/zsvFf87LxT/OS4V/0c3Ff+uegv/pn4O/7SOCP+skCv/nazW/9bb7P+3vN//lZ7M/11w
        vP9YXXv/k2kL/51yDf+nfw7/sYcO/19KHf9RQB3/TD0a/zQpEv8RCwD/XmVi/56dnv+Qi4vthX+A7ZSS
        k/9YYF7/CwYA/ycfDv83KxP/QjQX/z8yFv9BMxX/X0kT/7J8Cv/Qngf/t5YK/7KNFP+xuL3/09zx/8TK
        4/+Xo83/P1ax/52EPv+zhAX/socM/6+DDf+yig7/XUke/08+G/9IORn/MScR/xAKAP9ZYV//mJaX/4mD
        hO18dnftiYiJ/1JaWf8MBwD/Jx8O/zYrEv9DNRf/PjEW/0w7Fv+lcwz/i2UR/8COC//ZsAf/qYkG/7mw
        gP/Czvb/orHa/2mAxf9SXID/upEQ/8KWCf+7kgz/nnkR/556EP9PPyD/WEUe/0g5Gf8yKBH/EQsA/1Rd
        W/+RjpD/gXt87XVvcO2Bf4H/TVVT/w4IAP8pIA7/Oy8U/0Y3GP9IORn/Sjsa/6BvDf+ZchD/yZcJ/6yN
        D/+1lQn/r5cx/7q8wv+LmsL/hoyE/6+VGv++nQr/xKAN/8KXC/+0jg7/nHwR/29YGf9UQh//TDwa/zQp
        Ev8SDAD/UlpY/4mHif96dXbtc21u7X99f/9MUlH/DQgA/y4kEP9DNRf/SDkZ/0k6Gv9kTBf/q34M/7mP
        Df+xjQ7/rI8S/7qdD/+8mwn/yacY/7ieK//gwAr/tpgP/7idEP/Eow7/yKUK/8uoC/+2lA7/e2Mb/1dE
        IP9NPRv/MygR/xUOAf9QVlT/goCC/3VvcO11cHHtgoCC/05UU/8NCAD/JRsH/zcoDP8+Lw7/MycP/4Zc
        Bf+/iQD/lG8H/5RzCP+mggb/uZsE/7OUBf/CnwD/uJoC/72eBP+xkwf/h20M/6WCB//KpAD/vpkC/7aT
        A/9TPhX/VD8W/0c2Ef8rHwj/FAwA/1FYVf+FgoT/d3Fy7X13eO2KiIn/UFdX/x0XA/+UjFr/pJxr/6mf
        bP+on27/uaxp/+HJYv/VwGX/1sRm/9bDZv/azWb/5dhl/8q+av/Zy2f/1MZo/9jKaP/Zy2j/28pm/+bT
        ZP/Jumr/2Mdm/6mfb/+ypnD/saZw/6OaZf8tJgv/U1ta/5OSk/+Efn/th4GC7ZSTlP9VXVz/GRMC/4V9
        TP+UjFr/mpBc/5mQXf/JrVb/3r5R/9a6Uv/XvlL/4MpS/9LBVv/cylX/2stX/+DOVv/UwFT/4s9U/9TE
        Vv/m0VL/18JU/9fAVP+hlV//o5dg/6WYYP+glV//kohV/ykiCf9ZYF//oqGi/5KNju2Tjo/toqCi/15m
        Y/8NBwD/IRcG/y8iCv83KQ3/MCUO/3VQBv+5fAD/sHwA/7CGAf+0jQL/xKEB/76eBP+ylQf/rI4G/66L
        BP/arQD/u48C/6qDA/+9jgD/sogA/1lEEf9JNxT/UD0W/0o4FP8vIwv/DgcA/2JpZv+vra//oJud7aGc
        ne2vrq//Y2ln/w4IAP8rIg//NywT/zouFP86LhX/QzQV/6hrCv+udgv/vY8K/7aPDP+3lA3/xKMM/8Gk
        Dv/Anw3/wJYL/9GbCP+sfQz/kmoQ/6h9D/+3ihT/ZlQp/19PLf9lVDH/X1Aw/0tAKP8kHhL/cXd0/7q6
        u/+qp6ftramq7bm6u/9mbWr/DQcA/yggDv8zKRL/NysT/zwvFP82LRb/ZEUR/610C/+qdgz/v5EK/7aP
        Df+cfhT/uZwN/76aCf/BkAn/s4IR/5t2H/+ngyX/soYp/4puMv9cUDn/Y1Y5/2FTNv9cTzT/TkUx/y0o
        Hv99gX//ysvL/7q5uO22tLTtxcbG/2pvbP8LBQD/Jx8O/zcsE/8zKRL/OCwT/zUsFf9fRRD/unsI/651
        C/+ugQv/hGYR/7mVCv/BnRH/wZsc/7+dKP/GlCv/0Jws/7aKMP+ZdTL/XFE6/2ZcQv+An6b/Z4ud/2OF
        mP+ApLH/Q0lG/3+Bff/V1dX/ycfH7b++vu3Q0NH/bXJv/wgDAP8mHg3/MigR/zMoEv8zKBL/MigS/zcs
        Ev+GWwv/v38G/7qJC/+zhhn/vJco/8WfMv+/mjb/tJI2/7yOM/+cdzb/gWg4/1lQPf9kVzz/bGJJ/4Sw
        vv9ZkrL/V42u/4O4y/9MVFL/hIWB/9/g4P/S0NDtzMrK7dra2v9wc3H/AwAA/yAZCv8sIw7/NSoR/zEm
        D/8wJQ7/NCkS/0E1HP/EjCD/wZUy/72ROv/Dlzn/wJU3/76UOP/GlTb/xJg4/6qEOv9lWkH/Y1lC/2VY
        QP9tZE3/k7rG/1OOsP9Khan/ir3P/1RbWf+Kiof/6Ojo/9rZ2e3b2dnt6enq/31/fv8PDAn/JB4R/y8m
        FP87MRr/PjQg/0lALP9ZUDr/YVhF/39sRv+OdUX/sYtB/9CeOv/Snzv/1J06/6KAQP94akf/Y1tI/2Zd
        R/9pX0f/aF1G/2piTP+SoqL/b4WJ/2V6gf+KoKX/T1JP/46Pjf/u7+//4ODg7eDf3+3u7+//paal/z06
        NP9OSkH/WFJD/2FZSP9jW0v/Zl5M/2NbS/9mXUr/Y1tL/2ZeTP+Bb0v/eGlL/3hqS/+Pdkf/bmNM/2ph
        Tv9sYkz/bGJM/2heS/9pYEv/amBM/4J7cP9oWkL/XE86/21nX/9JRkH/o6Wj//Pz8//l5eXty8zM7fHx
        8f/Z29v/UlFO/0tIQf9aVUv/XVdM/15YS/9eWEv/XVdL/2BaTP9hWk3/ZF1O/2JbTv9hW07/X1pN/19a
        T/9lXU7/ZV1N/2RdTv9jXU3/YVpN/2NcTf9fWEn/gH12/3V3cP9oaGD/cHJw/1VTTv/b3Nz/9fX1/8/P
        z+2IiIjt+/v7//T19f++v77/WVhT/0pHQv9NSUP/TElD/01KRP9PS0T/UExF/1FNRv9RTUX/UU1F/1BM
        RP9PS0P/UU1E/1BMRP9RTUT/T0xE/1BMRf9RTUb/UU5G/1BMRP9TT0j/a2to/2ttav9lZWH/vL27//b2
        9v/9/f3/iYmJ7R8fH+3g4OD/+Pj4//b39//c3t7/q62r/5yenP+ZnZv/lZmY/5KVlP+Pk5H/kJWT/5WY
        l/+cnpz/o6Sh/6enpP+np6T/pKSi/5+hn/+anZv/lZiW/5CUkv+Ok5H/kpWU/5WYl/+Vl5T/pKaj/9bY
        1//z8/T/+Pf3/+Hh4f8fHx/tAAAA8j8/P//i4uL//f39//Pz8//v7u//6Ojo/9/f4P/X1tf/zMrM/8XC
        w//Jx8j/2NfY/+jo6f/4+Pj////////////9/f7/8fHy/+Pj5P/V1dX/ycfI/8XCxP/Lycr/1dTV/97e
        3v/l5eX/6+rq//j39//e3t7/Pz8//wAAAPIAAADcAAAA7R8fH+2Li4vtzs3N7eLh4e3c29vt1dTU7c7L
        zO3GwsPtwr2+7cjExO3V0tPt4eDg7e3t7e319fXt9vb27fHx8e3o5+ft3t3d7dPR0e3Jxcbtwr6/7cTA
        wO3Mycnt09HS7dnY2O3Hxsbth4eH7R8fH+0AAADtAAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAABAAAAAgAAAAAQAgAAAA
        AAAABAAAAAAAAAAAAAAAAAAAAAAAABQUFO+Ih4j4qaip93d3d/dSUVP3WVZX95qboPe6y+X3tcXi94ik
        0/dXbJL3Uk5M919dX/eTkZH3f35++BQUFO+VlZX30dLS/1JUUv8wMi7/KCci/ycmH/87PDj/pLXQ/7XH
        5/95mND/Okll/yYjFv8tLij/S05M/83Ozv+UlJT32NjZ911eXf8GAAD/KyEK/y4jDP8xJAn/NisV/5aq
        zv+Ys+H/ZYjL/zU5R/8zJQT/OCsS/w8FAP9eYF3/2dra98XGx/dBQT//JRsH/0Q3Gv9ENhn/QzQU/2hZ
        NP+httz/i6rc/1J2w/9bU0X/Uz8S/1RFI/81KAz/QkE//8bGx/eysrP3QkI9/yQaBP89MRb/OS4X/2ZL
        Dv+ihCz/qbje/42l2f9Uc8H/jnE0/3hYDP9NPyL/OSoL/0NCPf+wsLH3np6f9zw9OP8pHQb/PjIX/0Az
        F/+oeQb/q4wk/7nC3P+ss9z/Vmak/550E/+adA//Wkgg/zYoDP8+Pjj/np2e94uJivc2ODT/Kh8I/0E1
        G/9gRxb/uokM/7uYDP/Bxcj/jqTw/3xyW/+9jgP/pH4U/19MIf81Jw3/Ojs1/5COkPd8enz3MTEu/yMX
        Af86LBL/e1YJ/6+DBf+wjgD/tZ8//6SbWv+vkQX/wpsB/66KBf9eSRf/KxwE/zY2MP+Bf4H3gH6B9zo6
        Mv9kWTH/fHBH/7iaOv+/ozv/xK89/863M//Uui//vqs//861PP/JsTv/kH9L/25iNv9CQjb/hYOG95aU
        l/dAQTn/WlAq/3NpQf+2kTX/zqgx/860NP/NuDr/x7A5/9O2M//OrjH/pY05/39xR/9tXzH/R0c9/6Kh
        pPexsbL3QEE8/xwRAP8rIg//YUAJ/7N5Av+uhgP/spMD/7+VAf+xgAj/qXsR/3xgIP9XSTD/RDYe/1VV
        UP++vr/3xsfG90NDQP8iGAT/NiwV/zsuEf+pcgn/soQS/7eVIP/CnCv/v5Ey/4hsN/9oYEr/cJmq/2OQ
        p/90enf/09HR997e3vdJSEf/IBgH/0A1Hf8+NiX/eWIz/7mQPf/LnT7/wJQ//5B4RP9iWEP/c2lS/3aX
        ov9kipr/fIB+/+Li4ffy8/P3hoaE/zo1Kv9YUUL/W1RE/1lTR/9hV0X/a11A/2haQf9ZUkT/X1ZD/2BZ
        R/9yalv/VU9E/46OjP/09fX3p6en9/X29f+Pj43/eXh1/3Z3c/91dXD/e3p2/39+fP+BgHz/f354/3Z3
        c/91dHD/gIF+/5eZmP/z8/P/qKio9xYWFu+pqan48/Pz9+Hh4vfPztD3yMXG9+Dg4Pf7+/v3/f399+nq
        6/fQztD3x8XG99TT1Pfo5+f3pqam+BUVFe8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>